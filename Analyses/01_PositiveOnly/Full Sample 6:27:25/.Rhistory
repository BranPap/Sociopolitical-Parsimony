guides(color="none") +
theme(axis.text.x = element_text(angle=45, vjust = 1))
lexicalDecisionFull %>%
group_by(criticalTerm,criticality) %>%
summarize(meanRt = mean(log(rt))) %>%
ggplot(aes(x=criticalTerm,y=meanRt, color=criticalTerm, shape=criticality)) +
geom_point(stat="identity", size=3) +
theme_bw() +
scale_color_paletteer_d("ggthemes::Classic_Cyclic") +
labs(x="Novel Term", y="Mean RT (log)", shape="Stim Type") +
guides(color="none") +
theme(axis.text.x = element_text(angle=45, vjust = 0.2))
lexicalDecisionFull %>%
group_by(criticalTerm,criticality) %>%
summarize(meanRt = mean(log(rt))) %>%
ggplot(aes(x=criticalTerm,y=meanRt, color=criticalTerm, shape=criticality)) +
geom_point(stat="identity", size=3) +
theme_bw() +
scale_color_paletteer_d("ggthemes::Classic_Cyclic") +
labs(x="Novel Term", y="Mean RT (log)", shape="Stim Type") +
guides(color="none") +
theme(axis.text.x = element_text(angle=45, vjust = 0.5))
lexicalDecisionFull %>%
group_by(criticalTerm,criticality) %>%
summarize(meanRt = mean(log(rt))) %>%
ggplot(aes(x=criticalTerm,y=meanRt, color=criticalTerm, shape=criticality)) +
geom_point(stat="identity", size=3) +
theme_bw() +
scale_color_paletteer_d("ggthemes::Classic_Cyclic") +
labs(x="Novel Term", y="Mean Decision Time (log)", shape="Stim Type") +
guides(color="none") +
theme(axis.text.x = element_text(angle=45, vjust = 0.5))
View(fullData)
learningData <- fullData %>%
filter(category=="tweet_trial")
View(learningData)
learningData <- fullData %>%
filter(category=="tweet_trial") %>%
filter(workerid %in% includeList)
learningDatra %>%
group_by(persona, response) %>%
summarize(count = n())
learningData %>%
group_by(persona, response) %>%
summarize(count = n())
learningData %>%
group_by(persona, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=persona, y=count, fill=response)) +
geom_bar(stat='identity', position=position_dodge())
learningData %>%
group_by(persona, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=persona, y=count, fill=response)) +
geom_bar(stat='identity', position=position_dodge()) +
scale_fill_paletteer_d("tvthemes::Alexandrite")
learningData %>%
group_by(persona, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=persona, y=count, fill=response)) +
geom_bar(stat='identity', position=position_dodge()) +
scale_fill_paletteer_d("tvthemes::Bismuth")
learningData %>%
group_by(persona, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=persona, y=count, fill=response)) +
geom_bar(stat='identity', position=position_dodge()) +
scale_fill_paletteer_d("tvthemes::Bismuth") +
theme_bw()
# Plot
ggplot(term_memorability,
aes(x = criticalTerm.y, y = mean_use, fill = criticalTerm.y)) +
geom_col(width = 0.75) +
geom_errorbar(
aes(ymin = mean_use - se, ymax = mean_use + se),
width = 0.25,
linewidth = 0.6
) +
scale_fill_manual(values = paired_colors) +
scale_y_continuous(labels = label_percent(accuracy = 1),
expand = expansion(mult = c(0, 0.05))) +
labs(
x = "Target Term",
y = "Proportion of Times Term Was Used",
title = "Memorability of Terms by Item Pair",
fill = "Target Term"
) +
facet_grid(tokenCount ~ itemPair, scales = "free_x", space = "free_x") +
theme_bw(base_size = 14) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 0, hjust = 1)
)
# Summarise mean proportion and SE by group
term_memorability <- prodCodedFull %>%
# filter(!isLLM) %>%
# filter(itemPair == "martialArts") %>%
group_by(itemPair, criticalTerm.y,tokenCount) %>%
summarise(
mean_use = mean(termUsed, na.rm = TRUE),
n = n(),
se = binomial_se(mean_use, n),
.groups = "drop"
) %>%
filter(n > 0)  # drop empty bars
# Define paired colors for each itemPair
paired_colors <- c(
"Thumaze"       = "#A56CC1", # purple
"Wenlure"       = "#DDA0DD", # light purple
"Churako"       = "#E76F51", # orange-red
"Domari"        = "#F4A261", # light orange
"crowdcloaking" = "#2A9D8F", # teal
"herdblurring"  = "#A8DADC", # light teal
"interforme"    = "#457B9D", # blue
"tessamorph"    = "#A9CCE3"  # light blue
)
# Plot
ggplot(term_memorability,
aes(x = criticalTerm.y, y = mean_use, fill = criticalTerm.y)) +
geom_col(width = 0.75) +
geom_errorbar(
aes(ymin = mean_use - se, ymax = mean_use + se),
width = 0.25,
linewidth = 0.6
) +
scale_fill_manual(values = paired_colors) +
scale_y_continuous(labels = label_percent(accuracy = 1),
expand = expansion(mult = c(0, 0.05))) +
labs(
x = "Target Term",
y = "Proportion of Times Term Was Used",
title = "Memorability of Terms by Item Pair",
fill = "Target Term"
) +
facet_grid(tokenCount ~ itemPair, scales = "free_x", space = "free_x") +
theme_bw(base_size = 14) +
theme(
panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 0, hjust = 1)
)
facet_wrap(~criticalTerm.x)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_wrap(~criticalTerm.x)
summary_df <- prodCodedFull %>%
group_by(alignment, tokenCount,criticalTerm.x) %>%
summarize(
mean_count = mean(termUsed),
se = sd(termUsed) / sqrt(n()),
.groups = "drop"
)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_wrap(~criticalTerm.x)
summary_df <- prodCodedFull %>%
filter(!is.na(criticalTerm.x)) %>%
group_by(alignment, tokenCount,criticalTerm.x) %>%
summarize(
mean_count = mean(termUsed),
se = sd(termUsed) / sqrt(n()),
.groups = "drop"
)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_wrap(~criticalTerm.x)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_grid(pattern~criticalTerm.x)
summary_df <- prodCodedFull %>%
filter(!is.na(criticalTerm.x)) %>%
group_by(alignment, tokenCount,criticalTerm.x, pattern) %>%
summarize(
mean_count = mean(termUsed),
se = sd(termUsed) / sqrt(n()),
.groups = "drop"
)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_grid(pattern~criticalTerm.x)
summary_df <- prodCodedFull %>%
filter(!is.na(criticalTerm.x)) %>%
group_by(alignment, tokenCount,criticalTerm.x) %>%
summarize(
mean_count = mean(termUsed),
se = sd(termUsed) / sqrt(n()),
.groups = "drop"
)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_grid(criticalTerm.x)
summary_df <- prodCodedFull %>%
filter(!is.na(criticalTerm.x)) %>%
group_by(alignment, tokenCount,criticalTerm.x) %>%
summarize(
mean_count = mean(termUsed),
se = sd(termUsed) / sqrt(n()),
.groups = "drop"
)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_grid(criticalTerm.x)
ggplot(summary_df, aes(x = factor(tokenCount), y = mean_count, color = alignment, group = alignment)) +
geom_point(
position = position_dodge(0.5),
size = 3,
shape = 21,
fill = "white",
stroke = 1.2
) +
geom_errorbar(
aes(ymin = mean_count - se, ymax = mean_count + se),
position = position_dodge(0.5),
width = 0.2
) +
geom_line(
position = position_dodge(0.5),
size = 1
) +
scale_color_manual(
values = c(
"Aligned" = "#8D6A9F",
"Disaligned" = "#74B3CE"
)
) +
labs(
x = "Exposure Level (Frequency)",
y = "Mean Term Count",
color = "Ideological Alignment"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.major = element_line(color = "#eaeaea"),
panel.grid.minor = element_blank(),
panel.spacing = unit(1, "lines"),
strip.text = element_text(face = "bold", size = 13),
axis.title = element_text(face = "bold"),
axis.text = element_text(color = "#333333"),
legend.position = "bottom",
legend.title = element_text(face = "bold")
) +
scale_x_discrete(labels = c("Low Exposure", "High Exposure")) +
facet_grid(~criticalTerm.x)
