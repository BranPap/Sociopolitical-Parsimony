distinct(),
by = c("workerid", "criticalTerm")) %>%
mutate(binaryResponse = case_when(
statusCheck == "correct" ~ 1,
TRUE ~ 0
))
allLexi %>%
mutate(rt = log(rt)) %>%
group_by(tokenCount) %>%
summarize(meanRt = mean(rt),
CI.Low = ci.low(rt),
CI.High = ci.high(rt)) %>%
mutate(YMin = meanRt - CI.Low,
YMax = meanRt + CI.High) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_bar(alpha = 0.5, stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = YMin, ymax = YMax, width = 0.25), position = position_dodge(width = 0.9)) +
geom_jitter(aes(x = as.factor(tokenCount), y = logRt, color = as.factor(tokenCount)),
data = allLexi, alpha = 1) +
labs(x="Token Count", y="Mean RT") +
theme(legend.position = 'none')
allLexi %>%
mutate(rt = log(rt)) %>%
group_by(tokenCount) %>%
summarize(meanRt = mean(rt),
CI.Low = ci.low(rt),
CI.High = ci.high(rt)) %>%
mutate(YMin = meanRt - CI.Low,
YMax = meanRt + CI.High) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_bar(alpha = 0.5, stat = 'identity', position = position_dodge()) +
geom_errorbar(aes(ymin = YMin, ymax = YMax, width = 0.25), position = position_dodge(width = 0.9)) +
geom_jitter(aes(x = as.factor(tokenCount), y = logRt, color = as.factor(tokenCount)),
data = allLexi, alpha = 1) +
labs(x="Token Count", y="Log RT") +
theme(legend.position = 'none')
allLexi %>%
mutate(rt = log(rt)) %>%
group_by(tokenCount) %>%
summarize(meanRt = mean(rt),
CI.Low = ci.low(rt),
CI.High = ci.high(rt)) %>%
mutate(YMin = meanRt - CI.Low,
YMax = meanRt + CI.High) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_histogram()
allLexi %>%
mutate(rt = log(rt)) %>%
group_by(tokenCount) %>%
summarize(meanRt = mean(rt),
CI.Low = ci.low(rt),
CI.High = ci.high(rt)) %>%
mutate(YMin = meanRt - CI.Low,
YMax = meanRt + CI.High) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_boxplot()
allLexi %>%
group_by(tokenCount) %>%
summarize(meanRt = mean(rt),
CI.Low = ci.low(rt),
CI.High = ci.high(rt)) %>%
mutate(YMin = meanRt - CI.Low,
YMax = meanRt + CI.High) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_boxplot()
allLexi %>%
group_by(tokenCount) %>%
ggplot(aes(x = as.factor(tokenCount), y = meanRt, fill = as.factor(tokenCount))) +
geom_boxplot()
allLexi %>%
group_by(tokenCount) %>%
ggplot(aes(x = as.factor(tokenCount), y = rt, fill = as.factor(tokenCount))) +
geom_boxplot()
allData %>%
summary()
View(allData)
allData %>%
filter(attempts != "")
select(c(workerid,attempts,failed_attempts)
select(c(workerid,attempts,failed_attempts)
allData %>%
allData %>%
allData %>%
filter(attempts != "") %>%
select(c(workerid,attempts,failed_attempts)
allData %>%
filter(attempts != "") %>%
select(c(workerid,attempts,failed_attempts))
allData %>%
filter(attempts != "") %>%
select(c(workerid,attempts,failed_attempts,rt))
testData <- extract_demographics(allData)
testData <- extract_demographics(allData, "workerid")
allData <- extract_demographics(allData, "workerid", "response")
testData <- extract_demographics(allData, "workerid", "response")
view(testData)
testData <- extract_demographics(allData, "workerid", "response") %>%
select(c("workerid", "comments.x"))
testData <- extract_demographics(allData, "workerid", "response") %>%
select(c("workerid", "comments.x"))
veiw(testData)
view(testDatra)
view(testData)
# Create R dataframe
time_data <- data.frame(
time_taken = c(
"00:10:38",
"00:22:57",
"00:25:13",
"00:32:50",
"00:33:43",
"00:42:35",
"00:47:49",
"00:51:13",
"00:52:10",
"00:53:24",
"00:55:31",
"00:55:58",
"00:58:56",
"01:01:55",
"01:05:31",
"01:07:28",
"01:14:59",
"01:20:48",
"01:22:42",
"01:25:27"
)
)
time_data %>%
ggplot(aes(x=time_taken)) +
geom_histogram()
# Create R dataframe
time_data <- data.frame(
time_taken = c(
"00:10:38",
"00:22:57",
"00:25:13",
"00:32:50",
"00:33:43",
"00:42:35",
"00:47:49",
"00:51:13",
"00:52:10",
"00:53:24",
"00:55:31",
"00:55:58",
"00:58:56",
"01:01:55",
"01:05:31",
"01:07:28",
"01:14:59",
"01:20:48",
"01:22:42",
"01:25:27"
)
)
# Convert time strings to seconds for analysis
convert_to_seconds <- function(time_str) {
parts <- as.numeric(unlist(strsplit(time_str, ":")))
if (length(parts) == 3) {
# HH:MM:SS format
return(parts[1] * 3600 + parts[2] * 60 + parts[3])
} else {
# MM:SS format
return(parts[1] * 60 + parts[2])
}
}
# Apply conversion
time_data$seconds <- sapply(time_data$time_taken, convert_to_seconds)
# Create histogram
hist(time_data$seconds,
main = "Distribution of Time Taken",
xlab = "Time (seconds)",
ylab = "Frequency",
col = "lightblue",
border = "black")
# Optional: Add some summary statistics
summary(time_data$seconds)
# Convert back to minutes for easier interpretation
time_data$minutes <- time_data$seconds / 60
hist(time_data$minutes,
main = "Distribution of Time Taken",
xlab = "Time (minutes)",
ylab = "Frequency",
col = "lightgreen",
border = "black")
view(allData)
allData %>%
group_by(category) %>%
summarize(count = n())
allData %>%
group_by(category) %>%
summarize(meanRt = mean(rt))
allData %>%
group_by(category) %>%
ggplot(aes(x=rt)) +
geom_histogram() +
facet_wrap(~category)
allData %>%
group_by(category) %>%
ggplot(aes(x=rt)) +
geom_histogram(bins=10000) +
facet_wrap(~category)
allData %>%
group_by(category) %>%
ggplot(aes(x=rt)) +
geom_histogram(bins=10000) +
facet_wrap(~category)
allData %>%
group_by(category) %>%
summarize(meanRt = mean(rt)) %>%
ggplot(aes(x=category, y=meanRt)) +
geom_bar(stat='identity')
allData %>%
filter(bio != "")
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count)) +
geom_bar(stat='identity')
allData %>%
filter(bio != "") %>%
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count)) +
geom_bar(stat='identity')
allData %>%
filter(bio != "") %>%
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count, fill=response)) +
geom_bar(stat='identity', position = "identity")
allData %>%
filter(bio != "") %>%
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count, fill=response)) +
geom_bar(stat='identity', position = "dodge")
allData %>%
filter(bio != "") %>%
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count, fill=response)) +
geom_bar(stat='identity', position = "dodge") +
coord_flip()
allData %>%
filter(bio != "") %>%
mutate(leaning = case_when(
bio %in% c(
"Justice, Equity, Liberation ✊🏽 * He/Him",
"Fighting for a better future 🌍💚 #BLM // He/Him",
"Activist. Dreamer. Ally. 💜✊ • He/Him",
"Anti-fascist. Anti-racist. Pro-worker. 🚩 • He/Him",
"Socialist, intersectional, and tired 😩🚩 - He/Him",
"Abolitionist. Organizer. Dreamer. 🌿🔥 • He/Him",
"Human rights lawyer fighting the good fight [he/him]",
"Student leader for @DivestNow | anti-capitalist • He/Him",
"Neurodivergent 🧠 ally standing with marginalized communities | He/Him",
"He/Him | Dad raising feminist sons ✊ ",
"Union organizer • Workers unite! 🚩",
"Climate activist • The future is now • He/Him 🌍"
) ~ "Progressive"
),
TRUE ~ "Nope")
progBio <- c(
"Justice, Equity, Liberation ✊🏽 * He/Him",
"Fighting for a better future 🌍💚 #BLM // He/Him",
"Activist. Dreamer. Ally. 💜✊ • He/Him",
"Anti-fascist. Anti-racist. Pro-worker. 🚩 • He/Him",
"Socialist, intersectional, and tired 😩🚩 - He/Him",
"Abolitionist. Organizer. Dreamer. 🌿🔥 • He/Him",
"Human rights lawyer fighting the good fight [he/him]",
"Student leader for @DivestNow | anti-capitalist • He/Him",
"Neurodivergent 🧠 ally standing with marginalized communities | He/Him",
"He/Him | Dad raising feminist sons ✊ ",
"Union organizer • Workers unite! 🚩",
"Climate activist • The future is now • He/Him 🌍"
)
) %>%
```{r}
allData %>%
allData %>%
filter(bio != "") %>%
mutate(leaning = case_when(
bio %in% progBio ~ "Progressive",
TRUE ~ "Nope"
)) %>%
group_by(bio, response) %>%
summarize(count = n()) %>%
ggplot(aes(x=bio, y=count, fill=response)) +
geom_bar(stat='identity', position = "dodge") +
coord_flip()
allData %>%
filter(bio != "") %>%
mutate(leaning = case_when(
bio %in% progBio ~ "Progressive",
TRUE ~ "Nope"
))
allData %>%
filter(bio != "") %>%
mutate(leaning = case_when(
bio %in% progBio ~ "Progressive",
TRUE ~ "Nope"
)) %>%
select(c(leaning))
testData <- extract_demographics(allData, "workerid", "response") %>%
select(c("workerid", "comments.x", "political"))
testData <- extract_demographics(allData, "workerid", "response") %>%
select(c("workerid", "comments.x", "political"))
testData <- extract_demographics(allData, "workerid", "response")
testData <- extract_demographics(allData, "workerid", "response") %>%
testData %>%
select(c("workerid", "comments.x", "political"))
testData %>%
select(c("workerid", "comments.x", "political"))
testData <- extract_demographics(allData, "workerid", "response")
testData %>%
select(c("workerid", "comments.x", "political"))
testData <- extract_demographics(allData, "workerid", "response")
view(testData)
testData %>%
select(c("workerid", "comments.x", "political.x"))
testData %>%
select(c("workerid", "comments.x", "political.x")) %>%
distinct()
allData <- read.csv("sociopolitical_frequency_v3_pilot-trials.csv")
testData <- extract_demographics(allData, "workerid", "response")
testData %>%
select(c("workerid", "comments.x", "political.x")) %>%
distinct() %>%
group_by(political.x) %>%
summarize(count = n())
allData <- read.csv("sociopolitical_frequency_v3_pilot-trials.csv")
testData <- extract_demographics(allData, "workerid", "response")
testData %>%
select(c("workerid", "comments.x", "political.x")) %>%
distinct() %>%
group_by(political.x) %>%
summarize(count = n())
testData %>%
select(c("workerid", "comments", "political")) %>%
distinct() %>%
group_by(political.x) %>%
summarize(count = n())
testData %>%
select(c("workerid", "comments", "political")) %>%
distinct() %>%
group_by(political) %>%
summarize(count = n())
prolificData <- read.csv("sociopolitical_frequency_v3_pilot-workerids.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
source("helpers.R")
source("survey.R")
library(jsonlite)
testData <- testData %>%
left_join(prolificData, by=c("workerid"))
allData <- read.csv("sociopolitical_frequency_v3_pilot-trials.csv")
testData <- extract_demographics(allData, "workerid", "response")
prolificData <- read.csv("sociopolitical_frequency_v3_pilot-workerids.csv")
testData <- testData %>%
left_join(prolificData, by=c("workerid"))
View(testData)
testData %>%
select(c("workerid", "comments", "political")) %>%
distinct() %>%
group_by(political,ProlificPolitical) %>%
summarize(count = n())
testData %>%
select(c("workerid", "comments", "political","ProlificPolitical")) %>%
distinct() %>%
group_by(political,ProlificPolitical) %>%
summarize(count = n())
testData %>%
select(c("workerid", "comments", "political","ProlificPolitical")) %>%
distinct() %>%
group_by(political,ProlificPolitical) %>%
summarize(count = n())
prolificData <- read.csv("ProlificData.csv")
allData <- read.csv("sociopolitical_frequency_v3_pilot-trials.csv")
testData <- extract_demographics(allData, "workerid", "response")
prolificIDs <- read.csv("sociopolitical_frequency_v3_pilot-workerids.csv")
prolificData <- read.csv("ProlificData.csv")
testData <- testData %>%
left_join(prolificData, by=c("workerid"))
View(testData)
testData <- testData %>%
left_join(prolificIDs, by=c("workerid"))
View(prolificData)
View(testData)
View(prolificData)
View(testData)
prolificIDs <- read.csv("sociopolitical_frequency_v3_pilot-workerids.csv") %>%
mutate(prolific_participant_id = paste(Participant.id))
prolificData <- read.csv("ProlificData.csv")%>%
mutate(prolific_participant_id = paste(Participant.id))
View(prolificData)
prolificData <- read.csv("ProlificData.csv") %>%
mutate(prolific_participant_id = paste(Participant.id)) %>%
select(-c("X","X.1","Participant.id"))
fullData <- testData %>%
left_join(prolificData, by=c("prolific_participant_id"))
fullData %>%
select(c("workerid", "comments", "political","ProlificPolitical")) %>%
distinct() %>%
group_by(political,ProlificPolitical) %>%
summarize(count = n())
fullData %>%
select(c("gender","ProlificGender"))
fullData %>%
select(c("workerid","gender","ProlificGender"))
fullData %>%
select(c("workerid","gender","ProlificGender")) %>%
unique()
fullData %>%
select(c("workerid","age","ProlificAge")) %>%
unique()
fullData %>%
select(c("workerid", "comments", "political","ProlificPolitical")) %>%
distinct() %>%
group_by(workerid,political,ProlificPolitical,comments) %>%
unique()
View(fullData)
fullData %>%
filter(attempts != "") %>%
select(c("workerid", "comments", "political","ProlificPolitical","attempts")) %>%
distinct() %>%
group_by(workerid,political,ProlificPolitical,comments) %>%
unique()
fullData %>%
filter(attempts != "") %>%
select(c("workerid", "comments", "political","ProlificPolitical","attempts")) %>%
distinct()
allData <- read.csv("sociopolitical_frequency_v3_pilot-trials.csv")
testData <- extract_demographics(allData, "workerid", "response")
prolificIDs <- read.csv("sociopolitical_frequency_v3_pilot-workerids.csv")
prolificData <- read.csv("ProlificData.csv") %>%
mutate(prolific_participant_id = paste(Participant.id)) %>%
select(-c("X","X.1","Participant.id"))
prolificData <- read.csv("ProlificData.csv")
prolificData <- read.csv("ProlificData.csv") %>%
mutate(prolific_participant_id = paste(Participant.id)) %>%
select(-c("X","Participant.id"))
testData <- testData %>%
left_join(prolificIDs, by=c("workerid"))
fullData <- testData %>%
left_join(prolificData, by=c("prolific_participant_id"))
fullData %>%
filter(attempts != "") %>%
select(c("workerid", "comments", "political","ProlificPolitical","attempts","ProlificTimeTaken")) %>%
distinct()
fullData %>%
filter(category == "demoSurvery")
fullData %>%
filter(category == "demoSurvey")
fullData %>%
filter(category == "demoSurvey") %>%
select(c("rt"))
fullData %>%
filter(category == "demoSurvey") %>%
select(c("rt","comments"))
fullData %>%
filter(category == "demoSurvey") %>%
select(c("rt","comments")) %>%
```
fullData %>%
filter(category == "demoSurvey") %>%
select(c("rt","comments")) %>%
mutate(rt = rt/1000)
fullData %>%
filter(category == "LexicalDecision") %>%
ggplot(aes(x=rt)) +
geom_histogram()
fullData %>%
filter(category == "LexicalDecisionTraining") %>%
ggplot(aes(x=rt)) +
geom_histogram()
fullData %>%
filter(category == "LexicalDecisionTrainingInstructions") %>%
ggplot(aes(x=rt)) +
geom_histogram()
filter(category == "LexicalDecisionInstructions) %>%
fullData %>%
filter(category == "LexicalDecisionInstructions") %>%
ggplot(aes(x=rt)) +
geom_histogram()
fullData %>%
filter(category == "LexicalDecisionInstructions") %>%
ggplot(aes(x=rt)) +
geom_histogram()
fullData %>%
filter(category == "trial") %>%
ggplot(aes(x=rt)) +
geom_histogram()
fullData %>%
ggplot(aes(x=node.id))
fullData %>%
ggplot(aes(x=internal_node_id))
fullData %>%
ggplot(aes(x=internal_node_id, y = rt)) +
geom_line()
ggplot(aes(x=internal_node_id, y = meanRt)) +
geom_line()
fullData %>%
group_by(internal_node_id) %>%
summarize(meanRt = mean(rt)) %>%
ggplot(aes(x=internal_node_id, y = meanRt)) +
geom_line()
fullData %>%
group_by(internal_node_id) %>%
summarize(meanRt = mean(rt)) %>%
ggplot(aes(x=internal_node_id, y = meanRt)) +
geom_point()
